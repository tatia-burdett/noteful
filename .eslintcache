[{"/Users/tatjanacarney/projects/noteful/src/index.js":"1","/Users/tatjanacarney/projects/noteful/src/App.js":"2","/Users/tatjanacarney/projects/noteful/src/dummy-store.js":"3","/Users/tatjanacarney/projects/noteful/src/MainNoteList/MainNoteList.js":"4","/Users/tatjanacarney/projects/noteful/src/FolderList/FolderList.js":"5","/Users/tatjanacarney/projects/noteful/src/MainNote/MainNote.js":"6","/Users/tatjanacarney/projects/noteful/src/FolderNote/FolderNote.js":"7"},{"size":262,"mtime":1611945427965,"results":"8","hashOfConfig":"9"},{"size":3236,"mtime":1612115366391,"results":"10","hashOfConfig":"9"},{"size":12078,"mtime":1612282282338,"results":"11","hashOfConfig":"9"},{"size":675,"mtime":1612113663291,"results":"12","hashOfConfig":"9"},{"size":759,"mtime":1612282237653,"results":"13","hashOfConfig":"9"},{"size":396,"mtime":1612113733223,"results":"14","hashOfConfig":"9"},{"size":457,"mtime":1612115021587,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"1rzg3rr",{"filePath":"19","messages":"20","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"18"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"/Users/tatjanacarney/projects/noteful/src/index.js",[],["32","33"],"/Users/tatjanacarney/projects/noteful/src/App.js",["34"],"import React from 'react';\nimport { Route, Link } from 'react-router-dom'\nimport MainNoteList from './MainNoteList/MainNoteList' // Main section, list of all notes\nimport FolderList from './FolderList/FolderList' // Folder section, list of all folders\nimport MainNote from './MainNote/MainNote' // Main section, single note selected\nimport FolderNote from './FolderNote/FolderNote' // Folder section when single note selected\nimport DATA from './dummy-store'\nimport './App.css'\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      notes: [],\n      folders: []\n    }\n  }\n\n  componentDidMount() {\n    this.setState(DATA)\n  }\n\n  renderFolderRoutes() {\n    const findFolder = (folders=[], folderId) =>\n      folders.find(folder => folder.id === folderId)\n\n    const findNote = (notes=[], noteId) =>\n      notes.find(note => note.id === noteId)\n\n    const { notes, folders } = this.state\n    return (\n      <>\n        {['/', '/folder/:folderId'].map(path => (\n          <Route\n            exact\n            key={path}\n            path={path}\n            render={routeProps => (\n              <FolderList \n                folders={folders}\n                notes={notes}\n                {...routeProps}\n              />\n            )}\n          />\n        ))}\n        <Route \n          path='/note/:noteId'\n          render={routeProps => {\n            const {noteId} = routeProps.match.params\n            const note = findNote(notes, noteId) || {}\n            const folder = findFolder(folders, note.folderId)\n            return <FolderNote {...routeProps} folder={folder}/>\n          }}\n        />\n      </>\n    )\n  }\n\n  renderNoteRoutes() {\n    const getFolderNotes = (notes=[], folderId) => (\n      (!folderId)\n        ? notes\n        : notes.filter(note => note.folderId === folderId))\n\n    const findNote = (notes=[], noteId) =>\n      notes.find(note => note.id === noteId)\n\n    const { notes, folders } = this.state\n    return (\n      <>\n        {['/', '/folder/:folderId'].map(path => (\n          <Route \n            exact\n            key={path}\n            path={path}\n            render={routeProps => {\n            const {folderId} = routeProps.match.params\n              const folderNotes = getFolderNotes(\n                notes,\n                folderId\n              )\n              return (\n                <MainNoteList \n                  {...routeProps}\n                  notes={folderNotes}\n                />\n              )\n            }}\n          />\n        ))}\n        <Route \n          path='/note/:noteId'\n          render={routeProps => {\n            const {noteId} = routeProps.match.params\n            const note = findNote(notes, noteId)\n            return <MainNote {...routeProps} note={note}/>\n          }}\n        />\n      </>\n    )\n  }\n\n  render() {\n    return (\n      <div className='App'>\n        <header>\n          <Link to='/'><h1>Noteful</h1></Link>\n        </header>\n        <div className='App_sections'>\n          <nav className='App_nav'>\n            {this.renderFolderRoutes()}\n          </nav>\n          <main className='App_main'>\n            {this.renderNoteRoutes()}\n          </main>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;","/Users/tatjanacarney/projects/noteful/src/dummy-store.js",["35"],"/Users/tatjanacarney/projects/noteful/src/MainNoteList/MainNoteList.js",[],"/Users/tatjanacarney/projects/noteful/src/FolderList/FolderList.js",[],"/Users/tatjanacarney/projects/noteful/src/MainNote/MainNote.js",[],"/Users/tatjanacarney/projects/noteful/src/FolderNote/FolderNote.js",[],{"ruleId":"36","replacedBy":"37"},{"ruleId":"38","replacedBy":"39"},{"ruleId":"40","severity":1,"message":"41","line":69,"column":20,"nodeType":"42","messageId":"43","endLine":69,"endColumn":27},{"ruleId":"44","severity":1,"message":"45","line":1,"column":1,"nodeType":"46","endLine":116,"endColumn":2},"no-native-reassign",["47"],"no-negated-in-lhs",["48"],"no-unused-vars","'folders' is assigned a value but never used.","Identifier","unusedVar","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","no-global-assign","no-unsafe-negation"]