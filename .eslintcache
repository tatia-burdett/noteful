[{"/Users/tatjanacarney/projects/noteful/src/index.js":"1","/Users/tatjanacarney/projects/noteful/src/App.js":"2","/Users/tatjanacarney/projects/noteful/src/MainNoteList/MainNoteList.js":"3","/Users/tatjanacarney/projects/noteful/src/FolderList/FolderList.js":"4","/Users/tatjanacarney/projects/noteful/src/MainNote/MainNote.js":"5","/Users/tatjanacarney/projects/noteful/src/FolderNote/FolderNote.js":"6","/Users/tatjanacarney/projects/noteful/src/NotesContext.js":"7","/Users/tatjanacarney/projects/noteful/src/config.js":"8","/Users/tatjanacarney/projects/noteful/src/AddFolder/AddFolder.js":"9","/Users/tatjanacarney/projects/noteful/src/helperFunction.js":"10","/Users/tatjanacarney/projects/noteful/src/AddNote/AddNote.js":"11","/Users/tatjanacarney/projects/noteful/src/NotesError/NotesError.js":"12","/Users/tatjanacarney/projects/noteful/src/FolderError/FolderError.js":"13","/Users/tatjanacarney/projects/noteful/src/ValidationError/ValidationError.js":"14"},{"size":255,"mtime":1612917574425,"results":"15","hashOfConfig":"16"},{"size":2893,"mtime":1616264857676,"results":"17","hashOfConfig":"16"},{"size":2073,"mtime":1616264857680,"results":"18","hashOfConfig":"16"},{"size":922,"mtime":1616264857676,"results":"19","hashOfConfig":"16"},{"size":820,"mtime":1616264857679,"results":"20","hashOfConfig":"16"},{"size":991,"mtime":1616264857677,"results":"21","hashOfConfig":"16"},{"size":153,"mtime":1612917553015,"results":"22","hashOfConfig":"16"},{"size":63,"mtime":1616264875631,"results":"23","hashOfConfig":"16"},{"size":2376,"mtime":1616264857674,"results":"24","hashOfConfig":"16"},{"size":454,"mtime":1616264857683,"results":"25","hashOfConfig":"16"},{"size":4054,"mtime":1616264857675,"results":"26","hashOfConfig":"16"},{"size":528,"mtime":1612920015551,"results":"27","hashOfConfig":"16"},{"size":533,"mtime":1612918706635,"results":"28","hashOfConfig":"16"},{"size":288,"mtime":1612917455036,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"1ua92tz",{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"35","messages":"36","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"32"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"32"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"32"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"/Users/tatjanacarney/projects/noteful/src/index.js",[],[],"/Users/tatjanacarney/projects/noteful/src/App.js",["62"],"/Users/tatjanacarney/projects/noteful/src/MainNoteList/MainNoteList.js",["63","64","65","66"],"import React from 'react'\nimport {Link} from 'react-router-dom'\nimport Moment from 'react-moment'\nimport NotesContext from '../NotesContext'\nimport {getFolderNotes} from '../helperFunction'\nimport config from '../config'\nimport './MainNoteList.css'\n\nclass MainNoteList extends React.Component {\n  static defaultProps = {\n    match: {\n      params: {}\n    }\n  }\n\n  static contextType = NotesContext\n\n  deleteNoteRequest = (noteId) => {\n    fetch(`${config.API_ENDPOINT}/notes/${noteId}`, {\n      method: 'DELETE'\n    })\n      .then(res => {\n        if (!res.ok) {\n          return res.json().then(error => {\n            throw error\n          })\n        }\n        return res.json()\n      })\n      .then(data => {\n        this.context.fetchNotes()\n      })\n      .catch(error => {\n        console.log(error)\n      })\n  }\n\n  render () {\n    const {notes = []} = this.context\n    const {folderId} = this.props.match.params\n\n    const folderNotes = getFolderNotes(notes, folderId)\n\n    return (\n      <NotesContext.Consumer>\n        {(context) => (\n          <section className='Main_note_list'>\n            <ul>\n              {folderNotes.map(note =>\n                <li key={note.id} className='Main_list_item'>\n                  <Link to={`/note/${note.id}`}>\n                    <h3>{note.name}</h3>\n                    <Moment format='D MMM YYYY'>{note.modified}</Moment>\n                  </Link>\n                  <div className='Main_list_del'>\n                    <button onClick={() => {\n                      this.deleteNoteRequest(\n                        note.id,\n                        context.deleteNote\n                      )\n                    }}>\n                      Delete\n                    </button>\n                  </div>\n                </li>\n              )}\n            </ul>\n            <div className='Main_note_add_link'>\n              <Link to='/add-note'>Add Note +</Link>\n            </div>\n          </section>\n        )}\n      </NotesContext.Consumer>\n    )\n  }\n}\n\nMainNoteList.defaultProps = {\n  notes: []\n}\n\nexport default MainNoteList\n","/Users/tatjanacarney/projects/noteful/src/FolderList/FolderList.js",[],"/Users/tatjanacarney/projects/noteful/src/MainNote/MainNote.js",[],"/Users/tatjanacarney/projects/noteful/src/FolderNote/FolderNote.js",[],"/Users/tatjanacarney/projects/noteful/src/NotesContext.js",[],"/Users/tatjanacarney/projects/noteful/src/config.js",[],"/Users/tatjanacarney/projects/noteful/src/AddFolder/AddFolder.js",["67"],"import React from 'react'\nimport config from '../config'\nimport NotesContext from '../NotesContext'\nimport ValidationError from '../ValidationError/ValidationError'\nimport PropTypes from 'prop-types'\nimport './AddFolder.css'\n\nclass AddFolder extends React.Component {\n  constructor (props) {\n    super(props)\n    this.state = {\n      name: {\n        value: ''\n      }\n    }\n  }\n\n  static contextType = NotesContext\n\n  // input onChange()\n\n  updateName (name) {\n    this.setState({\n      name: {\n        value: name\n      }\n    })\n  }\n\n  // Form Validation\n\n  validateName () {\n    const name = this.state.name.value.trim()\n    if (name.length === 0) {\n      return 'Name is required'\n    } else if (name.length < 3) {\n      return 'Name must be at least 3 characters long'\n    }\n  }\n\n  // Form Submission, POST request\n\n  handleSubmit (event) {\n    event.preventDefault()\n    const query = this.state.name.value\n\n    const requestOptions = {\n      method: 'POST',\n      headers: {'Content-Type': 'application/json'},\n      body: JSON.stringify({\n        name: `${query}`\n      })\n    }\n\n    fetch(`${config.API_ENDPOINT}/folders/`, requestOptions)\n      .then(res => {\n        if (!res.ok) {\n          throw new Error('Something went wrong! Try again later.')\n        }\n        return res.json()\n      })\n      .then(() => {\n        this.props.history.goBack()\n        this.context.fetchNotes()\n      })\n      .catch(error => {\n        console.log('Error: ', error)\n      })\n  }\n\n  render () {\n    return (\n      <div className='Add_folder'>\n        <div className='Folder_back_btn'>\n          <button onClick={() => this.props.history.goBack()}>\n            Go Back\n          </button>\n        </div>\n        <form className='add_folder_form' onSubmit={e => this.handleSubmit(e)}>\n          <legend>Create a Folder</legend>\n          <label htmlFor='name' className='add_folder_label'>Name</label>\n          <input\n            type='text'\n            name='name'\n            id='name'\n            className='add_folder'\n            onChange={e => this.updateName(e.target.value)}\n            required\n          />\n          <ValidationError message={this.validateName()} />\n          <button type='submit' className='add_folder_btn'>Add Folder</button>\n        </form>\n      </div>\n    )\n  }\n}\n\nAddFolder.propTypes = {\n  history: PropTypes.object\n}\n\nexport default AddFolder\n","/Users/tatjanacarney/projects/noteful/src/helperFunction.js",[],"/Users/tatjanacarney/projects/noteful/src/AddNote/AddNote.js",["68"],"import React from 'react'\nimport config from '../config'\nimport NotesContext from '../NotesContext'\nimport PropTypes from 'prop-types'\nimport ValidationError from '../ValidationError/ValidationError'\nimport './AddNote.css'\n\nclass AddNote extends React.Component {\n  constructor (props) {\n    super(props)\n    this.state = {\n      name: {\n        value: ''\n      },\n      content: {\n        value: ''\n      },\n      folder: {\n        value: ''\n      }\n    }\n  }\n\n  static contextType = NotesContext\n\n  // input onChange()\n\n  updateName (name) {\n    this.setState({\n      name: {\n        value: name\n      }\n    })\n  }\n\n  updateContent (content) {\n    this.setState({\n      content: {\n        value: content\n      }\n    })\n  }\n\n  updateFolder (folder) {\n    this.setState({\n      folder: {\n        value: folder\n      }\n    })\n  }\n\n  // Form Validation\n\n  validateName () {\n    const name = this.state.name.value.trim()\n    if (name.length === 0) {\n      return 'Name is required'\n    } else if (name.length < 3) {\n      return 'Name must be at least 3 characters long'\n    }\n  }\n\n  validateContent () {\n    const content = this.state.content.value.trim()\n    if (content.length === 0) {\n      return 'Content is required'\n    }\n  }\n\n  validateFolder () {\n    const folder = this.state.folder.value.trim()\n    if (folder === 'none') {\n      return 'Folder is required'\n    }\n  }\n\n  // Form Submission, POST request\n\n  handleSubmit (event) {\n    event.preventDefault()\n    const name = this.state.name.value\n    const content = this.state.content.value\n    const folder = this.state.folder.value\n\n    const requestOptions = {\n      method: 'POST',\n      headers: {'Content-Type': 'application/json'},\n      body: JSON.stringify({\n        name: `${name}`,\n        content: `${content}`,\n        folderId: `${folder}`\n      })\n    }\n\n    fetch(`${config.API_ENDPOINT}/notes/`, requestOptions)\n      .then(res => {\n        if (!res.ok) {\n          throw new Error('Something went wrong! Try again later.')\n        }\n        return res.json()\n      })\n      .then(() => {\n        this.props.history.goBack()\n        this.context.fetchNotes()\n      })\n      .catch(error => {\n        console.log('Error: ', error)\n      })\n  }\n\n  render () {\n    const options = this.context.folders.map((folder, i) => {\n      return <option value={folder.id} key={i}>{folder.name}</option>\n    })\n\n    return (\n      <div className='Add_note'>\n        <div className='Folder_back_btn'>\n          <button onClick={() => this.props.history.goBack()}>\n            Go Back\n          </button>\n        </div>\n        <form className='add_note_form' onSubmit={e => this.handleSubmit(e)}>\n          <legend>Create a Note</legend>\n          <label htmlFor='name' className='add_note_label'>Name:</label>\n          <input\n            type='text'\n            name='name'\n            id='name'\n            className='add_note'\n            onChange={e => this.updateName(e.target.value)}\n            required\n          />\n          <ValidationError message={this.validateName()}/>\n          <label htmlFor='content' className='add_note_label'>Content:</label>\n          <textarea\n            type='text'\n            name='content'\n            id='content'\n            className='add_note'\n            onChange={e => this.updateContent(e.target.value)}\n            required\n          />\n          <ValidationError message={this.validateContent()}/>\n          <label htmlFor='folder' className='add_note_label'>Select a Folder</label>\n          <select\n            id='folder'\n            name='folder'\n            onChange={e => this.updateFolder(e.target.value)}\n            required\n          >\n            <option value='none'>Select one...</option>\n            {options}\n          </select>\n          <ValidationError message={this.validateFolder()}/>\n          <button type='submit' className='add_note_btn'>Add Note</button>\n        </form>\n      </div>\n    )\n  }\n}\n\nAddNote.propTypes = {\n  history: PropTypes.object\n}\n\nAddNote.defaultProps = {\n  folders: []\n}\n\nexport default AddNote\n","/Users/tatjanacarney/projects/noteful/src/NotesError/NotesError.js",[],"/Users/tatjanacarney/projects/noteful/src/FolderError/FolderError.js",[],"/Users/tatjanacarney/projects/noteful/src/ValidationError/ValidationError.js",[],{"ruleId":"69","severity":1,"message":"70","line":40,"column":9,"nodeType":"71","messageId":"72","endLine":40,"endColumn":20},{"ruleId":"69","severity":1,"message":"70","line":34,"column":9,"nodeType":"71","messageId":"72","endLine":34,"endColumn":20},{"ruleId":"73","severity":1,"message":"74","line":40,"column":12,"nodeType":"75","endLine":40,"endColumn":20},{"ruleId":"73","severity":1,"message":"76","line":40,"column":35,"nodeType":"77","endLine":40,"endColumn":40},{"ruleId":"73","severity":1,"message":"78","line":40,"column":41,"nodeType":"77","endLine":40,"endColumn":47},{"ruleId":"69","severity":1,"message":"70","line":67,"column":9,"nodeType":"71","messageId":"72","endLine":67,"endColumn":20},{"ruleId":"69","severity":1,"message":"70","line":107,"column":9,"nodeType":"71","messageId":"72","endLine":107,"endColumn":20},"no-console","Unexpected console statement.","MemberExpression","unexpected","react/prop-types","'match.params.folderId' is missing in props validation","Property","'match' is missing in props validation","Identifier","'match.params' is missing in props validation"]